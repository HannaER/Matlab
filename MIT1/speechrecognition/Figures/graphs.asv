
%% FIGURES
clc;
clear all;
close all;


Fs = 8000;
K = 32; % filter length
L = 4; % antal micar som amn ska testa för, dvs. antalet kurvor i grafen
M = 31;% antal brusnivåer, mätpunkter/kurva
N = 100;% 100 ord ska testas, 50/50 höger/vänster. Måste vara ett jämnt tal
P = 200; % antal ord(vänster/höger)/avstånd som finns att utnyttja till tester


N_REFLEC = 9; %N_REFLEC
BLOCK_LENGTH = 160; %BLOCK_LENGTH
OVERLAP = BLOCK_LENGTH/2; %OVERLAP
SUBSET_LENGTH = 12; %SUBSET_LENGTH
GAMMA = 0.5; % coefficient for pre_emhp
THRESHOLD = 4;
START_SNR = -10;
DECIBEL_STEP = 1;
result1.result11mbf = [];
snr1 = []; % x-vector - the same for all 4
%SKAPA SNR VEKTORN SOM ÄR X-AXELN
for i = 1:M
    snr1 = [snr1 (START_SNR + (i-1)*DECIBEL_STEP)]; % calc. the snr vector
end


cases.list = [];

%%%%%%%%%% NOISE %%%%%%%%%%

%%% WHITE, FACTORY, ENGINE AND BABBLE  %%%
load 'TEST\NOISE\white1.mat'
w1 = result1;
s.case = w1;
eval(['cases.list = [cases.list s];']);
load 'TEST\NOISE\white2.mat'
w2 = result2;
s.case = w2;
eval(['cases.list = [cases.list s];']);
load 'TEST\NOISE\white4.mat'
w4 = result4;
s.case = w4;
eval(['cases.list = [cases.list s];']);

load 'TEST\NOISE\factory1.mat'
f1 = result1;
s.case = f1;
eval(['cases.list = [cases.list s];']);
load 'TEST\NOISE\factory2.mat'
f2 = result2;
s.case = f2;
eval(['cases.list = [cases.list s];']);
load 'TEST\NOISE\factory4.mat'
f4 = result4;
s.case = f4;
eval(['cases.list = [cases.list s];']);


load 'TEST\NOISE\engine1.mat'
e1 = result1;
s.case = e1;
eval(['cases.list = [cases.list s];']);
load 'TEST\NOISE\engine2.mat'
e2 = result2;
s.case = e2;
eval(['cases.list = [cases.list s];']);
load 'TEST\NOISE\engine4.mat'
e4 = result4;
s.case = e4;
eval(['cases.list = [cases.list s];']);


load 'TEST\NOISE\babble1.mat'
b1 = result1;
s.case = b1;
eval(['cases.list = [cases.list s];']);
load 'TEST\NOISE\babble2.mat'
b2 = result2;
s.case = b2;
eval(['cases.list = [cases.list s];']);
load 'TEST\NOISE\babble4.mat'
b4 = result4;
s.case = b4;
eval(['cases.list = [cases.list s];']);

names = char('w1', 'w2', 'w4', 'f1', 'f2', 'f4', 'e1', 'e2', 'e4' ,'b1' ,'b2', 'b4');

names = ['w1' 'w2' 'w4' 'f1' 'f2' 'f4' 'e1' 'e2' 'e4' 'b1' 'b2' 'b4'];
j = 1;
for i = 1:length(cases.list)
    setup = cases.list(i).case;
    figure('Name', names(i));
    resultCase = strcat('result', num2str(j), '1mbf');
    y = extractfield(setup.(resultCase), 'wer');
    plot(snr1, y, 'k-o', 'LineWidth', 1.5);
    hold on;
    resultCase = strcat('result', num2str(j), '1');
    y = extractfield(setup.(resultCase), 'wer');
    plot(snr1,y, 'k-x', 'LineWidth', 1.5);
    resultCase = strcat('result', num2str(j), '2');
    y = extractfield(setup.(resultCase), 'wer');
    plot(snr1,y, 'k-s', 'LineWidth', 1.5);
    resultCase = strcat('result', num2str(j), '3');
    y = extractfield(setup.(resultCase), 'wer');
    plot(snr1, y, 'k-d', 'LineWidth', 1.5);
    resultCase = strcat('result', num2str(j), '4');
    y = extractfield(setup.(resultCase), 'wer');
    plot(snr1, y, 'k-p', 'LineWidth', 1.5);
    
    title(strcat(num2str(j), ' meter'), 'FontSize', 16);
    legend( '1 mic  + noise - bf', '1 mic  + noise + bf','2 mics + noise + bf','3 mics + noise + bf','4 mics + noise + bf', 'Location', 'SouthEast');
    xlabel('SNR [dB]', 'FontSize', 16);
    ylabel('Recognition Rate [%]', 'FontSize', 16);
    set(gca, 'fontsize', 12);
    axis([START_SNR (START_SNR + (M-1)*DECIBEL_STEP) 0 100]);
    
    
    if(j == 1)
        j = 2;
    elseif(j == 2)
        j = 4;
    elseif(j == 4)
        j = 1;
    end
end
%%
%%%%%%%%%% NOISE + REVERBERATION %%%%%%%%%%


%%% WHITE, FACTORY, ENGINE AND BABBLE  %%%


load 'TEST\NOISE+REVERBERATION\white1.mat'
w1r = result1r;
load 'TEST\NOISE+REVERBERATION\white2.mat'
w2r = result2r;
load 'TEST\NOISE+REVERBERATION\white4.mat'
w4r = result4r;


load 'TEST\NOISE+REVERBERATION\factory1.mat'
f1r = result1r;
load 'TEST\NOISE+REVERBERATION\factory2.mat'
f2r = result2r;
load 'TEST\NOISE+REVERBERATION\factory4.mat'
f4r = result4r;


load 'TEST\NOISE+REVERBERATION\engine1.mat'
e1r = result1r;
load 'TEST\NOISE+REVERBERATION\engine2.mat'
e2r = result2r;
load 'TEST\NOISE+REVERBERATION\engine4.mat'
e4r = result4r;


load 'TEST\NOISE+REVERBERATION\babble1.mat'
b1r = result1r;
load 'TEST\NOISE+REVERBERATION\babble2.mat'
b2r = result2r;
load 'TEST\NOISE+REVERBERATION\babble4.mat'
b4r = result4r;














